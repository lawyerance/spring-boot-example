buildscript {
    ext {
        springBootVersion = "2.1.8.RELEASE"
        springDependencyVersion = "1.0.8.RELEASE"
        asciidoctorVersion = "1.5.8"
        swagger2markupVersion = "1.3.1"
    }
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "io.spring.gradle:dependency-management-plugin:$springDependencyVersion"
        classpath "org.asciidoctor:asciidoctor-gradle-plugin:$asciidoctorVersion"
        classpath "io.github.swagger2markup:swagger2markup-gradle-plugin:$swagger2markupVersion"
        classpath "io.github.swagger2markup:swagger2markup:$swagger2markupVersion"
        classpath "io.github.swagger2markup:swagger2markup-import-files-ext:1.3.1"
        classpath "com.bluepapa32:gradle-watch-plugin:0.1.5"
        classpath "org.kordamp.gradle:livereload-gradle-plugin:0.2.1"
    }
}
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'io.github.swagger2markup'
apply plugin: 'java'
apply plugin: 'idea'

group 'pers.lyks.spring.boot'
version '1.0.0-SNAPSHOT'

sourceCompatibility = 1.8

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}


ext {
    springBootVersion = '2.1.8.RELEASE'
    springRestdocsVersion = '2.0.3.RELEASE'

    swaggerOutputDir = file("build/swagger")
    asciiDocOutputDir = file("build/asciidoc/generated")
    snippetsOutputDir = file("build/asciidoc/snippets")
}

ext {
    swaggerVersion = "2.9.2"
}

repositories {
    mavenLocal()
    maven { url 'http://repo.spring.io/plugins-release/' }
    mavenCentral()
}


dependencies {
    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:$springRestdocsVersion"

    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.12'

    compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.3.1'

    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: "${swaggerVersion}"

    compile group: 'io.springfox', name: 'springfox-swagger2', version: "${swaggerVersion}"

    compileOnly(group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3') {
        exclude(group: 'org.slf4j', module: 'slf4j-api')
    }
    asciidoctor 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.15'
}


test {
    systemProperty 'io.springfox.staticdocs.outputDir', swaggerOutputDir
    systemProperty 'io.springfox.staticdocs.snippetsOutputDir', snippetsOutputDir
}

convertSwagger2markup {
    dependsOn test
    swaggerInput "${swaggerOutputDir}/swagger.json"
    outputDir asciiDocOutputDir
    config = ['swagger2markup.markupLanguage': 'ASCIIDOC',
              'swagger2markup.pathsGroupedBy': 'TAGS']
}

asciidoctorj {
    version = '1.5.5'
}

asciidoctor {
    dependsOn convertSwagger2markup
    sources {
        include 'index.adoc'
    }
    backends = ['html5', 'pdf']
    attributes = [
            doctype    : 'book',
            toc        : 'left',
            toclevels  : '3',
            numbered   : '',
            sectlinks  : '',
            sectanchors: '',
            hardbreaks : '',
            generated  : asciiDocOutputDir
    ]
}

jar {
    dependsOn asciidoctor
    //将生成的html和PDF拷贝到项目中
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
    from("${asciidoctor.outputDir}/pdf") {
        into 'static/docs'
    }
}
